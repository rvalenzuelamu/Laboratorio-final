name: Workflow
on:
  push:
    branches:
      - pipeline-devsecops

jobs:
  #----------------- SAST ----------------------
  SAST:
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies with Yarn 
        run: yarn install

      - name: Build project
        run: yarn run build

      - name: List Built Files
        run: ls -l

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v2 
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: curso-devsecops-usach_lab-final
          SONAR_ORGANIZATION: curso-devsecops-usach
        with:
          args: >
            -Dsonar.projectKey=curso-devsecops-usach_lab-final
            -Dsonar.organization=curso-devsecops-usach
            -Dsonar.sources=.
            -Dsonar.exclusions=**/node_modules/**

      - name: Analizando vulnerabilidades críticas, altas y medias.
        run: |
          echo "Analizando vulnerabilidades críticas, altas y medias...."
          vulnerabilities=$(curl -s -u ${{ secrets.SONAR_TOKEN }}: "https://sonarcloud.io/api/issues/search?organization=curso-devsecops-usach&projectKeys=curso-devsecops-usach_lab-final&branch=pipeline-devsecops&severities=CRITICAL,MAJOR,MINOR&statuses=OPEN,REOPENED" | jq '.total')
           if [ "$vulnerabilities" -gt 0 ]; then
             echo "Se encontraron $vulnerabilities vulnerabilities Criticas, Altas, o Medias"
             exit 1
           else
             echo "No se encontraron vulnerabilidades Criticas, Altas, o Medias"
           fi

  #    - name: Check Quality Gate
  #      run: |
  #        echo "Checking Quality Gate status on SonarCloud..."
  #        qualityGateStatus=$(curl -s -u ${{ secrets.SONAR_TOKEN }}: "https://sonarcloud.io/api/qualitygates/project_status?projectKey=curso-devsecops-usach_lab-final&branch=pipeline-devsecops" | jq -r '.projectStatus.status')
  #        if [ "$qualityGateStatus" != "OK" ]; then
  #          echo "Quality Gate failed: $qualityGateStatus"
  #          exit 1
  #        else
  #          echo "Quality Gate passed: $qualityGateStatus"
  #        fi

  #----------------- SCA ----------------------
  SCA:
    needs: SAST
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2      

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build project
        id: build
        run: |
          echo "Building React project..."
          npm run build

      - name: Dependency Check for Node.js
        run: |
          echo "Running Dependency Check for Node.js..."
          npm install -g snyk
          snyk test --all-projects --severity-threshold=high --json > snyk-report.json
          snyk monitor --all-projects --severity-threshold=high

      - name: Convert JSON report to HTML
        run: npm install -g snyk-to-html
        run: snyk-to-html -i snyk-report.json -o snyk-report.html

      - name: Upload Dependency Check Report
        uses: actions/upload-artifact@v2
        with:
          name: dependency-check-report
          path: snyk-report.html

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: build/
        

